# 정점 커버 근사 알고리즘

def VertexCover(adj):    # 인접 행렬로 주어진 그래프에 대래 정점 커버를 구하는 근사 알고리즘
  V = len(adj)    # 정점의 개수
  visited = [False] * V    # 정점의 방문 표시
  c = []    # 근사해 집합
  
  for u in range(V):
    if not visited[u]:
      for v in range(V):
        #  아직 방문하지 않은 두 정점 사이의 간선 (u,v)를 선택
        if adj[u][v] != 0 and visited[v] == False:
          c.append(u)      # u,v를 모두 해에 넣음
          c.append(v)
          visited[u] = True    # u,v와 연결된 모든 간선들을
          visited[v] = True    # 더 이상 고려하지 않음
          break
  return c


# 알고리즘 테스트
G1 = [
  [0, 1, 1, 0, 0, 0, 0],
  [1, 0, 0, 1, 0, 0, 0],        #  0 - 1 - 3   6
  [1, 0, 0, 0, 0, 0, 0],        #  |       |   |
  [0, 1, 0, 0, 1, 0, 0],        #  1       4 - 5
  [0, 0, 0, 1, 0, 1, 0],
  [0, 0, 0, 0, 1, 0, 1],
  [0, 0, 0, 0, 0, 1, 0]
]

c1 = VertexCover(G1)
print("Vertex Cover(G1) = ", len(c1), ">>",  c1)

G2 = [
  [0, 1, 0, 0, 0, 0],
  [1, 0, 1, 1, 0, 0],          # 0 - 1 - 3
  [0, 1, 0, 0, 1, 1],          #     |   |
  [0, 1, 0, 0, 1, 0],          # 5 - 2 - 4
  [0, 0, 1, 1, 0, 0],
  [0, 0, 1, 0, 0, 0]
]

c2 = VertexCover(G2)
print("Vertex Cover(G2) = ", len(c2), ">>", c2)




#################################################
# 결과
#
# Vertex Cover(G1) =  6 >> [0, 1, 3, 4, 5, 6]
# Vertex Cover(G2) =  4 >> [0, 1, 2, 4]
#################################################
